{"version":3,"sources":["components/RoomCard.js","components/BookingForm/NameInput.js","components/BookingForm/NumberOfOccupantsInput.js","components/BookingForm/PhoneNumberInput.js","components/BookingForm/index.js","App.js","index.js"],"names":["RoomCard","props","room","occupants","className","id","user","onClick","emptyRoom","type","bookRoom","NameInput","htmlFor","name","onChange","updateForm","placeholder","NumberOfOccupantsInput","value","PhoneNumberInput","BookingForm","event","target","setForm","form","App","useState","rooms","setRooms","users","setUsers","numberOfOccupants","roomNumber","preventDefault","phone","newUser","parseInt","roomsCopy","userRoom","find","alert","roomId","console","log","map","idx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e40c286c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction RoomCard(props) {\n  if (props.room.occupants) {\n    return (\n      <div className={\"card border-danger\"}>\n        <div className=\"card-header\">Room #{props.room.id}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Name: {props.room.user}</h5>\n          <p className=\"card-text\">Occupants: {props.room.occupants}</p>\n          <button\n            id={props.room.id}\n            onClick={props.emptyRoom}\n            type=\"button\"\n            className=\"btn btn-secondary\"\n          >\n            Checkout Guest\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className={\"card border-success\"}>\n        <div className=\"card-header\">Room #{props.room.id}</div>\n        <div className=\"card-body\">\n          <button\n            onClick={props.bookRoom}\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            id={props.room.id}\n          >\n            Book Room\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RoomCard;\n","import React from \"react\";\n\nfunction NameInput(props) {\n  return (\n    <>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        className=\"form-control\"\n        name=\"name\"\n        onChange={props.updateForm}\n        placeholder=\"Reservation Name\"\n        type=\"text\"\n      ></input>\n    </>\n  );\n}\n\nexport default NameInput;\n","import React from \"react\";\n\nfunction NumberOfOccupantsInput(props) {\n  return (\n    <>\n      <label htmlFor=\"number-of-occupants\">Number of Occupants</label>\n      <div className=\"input-group mb-3\">\n        <select\n          className=\"custom-select\"\n          onChange={props.updateForm}\n          name=\"numberOfOccupants\"\n          id=\"number-of-occupants\"\n        >\n          <option value=\"1\">1 person</option>\n          <option value=\"2\">2 people</option>\n          <option value=\"3\">3 people</option>\n          <option value=\"4\">4 people</option>\n        </select>\n      </div>\n    </>\n  );\n}\nexport default NumberOfOccupantsInput;\n","import React from \"react\";\n\nfunction PhoneNumberInput(props) {\n  return (\n    <>\n      <label htmlFor=\"phone\">Phone Number</label>\n      <input\n        className=\"form-control\"\n        name=\"phone\"\n        onChange={props.updateForm}\n        placeholder=\"Phone Number\"\n        type=\"text\"\n      ></input>\n    </>\n  );\n}\n\nexport default PhoneNumberInput;\n","import React from \"react\";\nimport NameInput from \"./NameInput\";\nimport NumberOfOccupantsInput from \"./NumberOfOccupantsInput\";\nimport PhoneNumberInput from \"./PhoneNumberInput\";\n\nfunction BookingForm(props) {\n  // handle input change\n  const updateForm = (event) => {\n    const { name, value } = event.target;\n    props.setForm({ ...props.form, [name]: value });\n  };\n  return (\n    <form>\n      <div className=\"form-row\">\n        <div className=\"form-group col\">\n          <NameInput updateForm={updateForm} />\n        </div>\n        <div className=\"form-group col\">\n          <PhoneNumberInput updateForm={updateForm} />\n        </div>\n        <div className=\"form-group col\">\n          <NumberOfOccupantsInput updateForm={updateForm} />\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default BookingForm;\n","import React, { useState } from \"react\";\nimport RoomCard from \"./components/RoomCard.js\";\nimport BookingForm from \"./components/BookingForm/index.js\";\n\nfunction App() {\n  // set intial state\n  const initRooms = [\n    { id: 1, occupants: 0 },\n    { id: 2, occupants: 0 },\n    { id: 3, occupants: 0 },\n    { id: 4, occupants: 0 },\n    { id: 5, occupants: 0 },\n  ];\n\n  // state\n  const [rooms, setRooms] = useState(initRooms);\n  const [users, setUsers] = useState([]);\n  const [form, setForm] = useState({ numberOfOccupants: 1, roomNumber: 1 });\n\n  // event handler\n  const bookRoom = (event) => {\n    event.preventDefault();\n    // add user to state\n    if (!form.name) {\n      alert(\"Please enter a name!\");\n      return;\n    }\n    if (!form.phone) {\n      alert(\"Please enter a phone number!\");\n      return;\n    }\n    const newUser = {\n      id: parseInt(form.phone),\n      name: form.name,\n    };\n    setUsers([...users, newUser]);\n\n    // update room by id\n    const roomsCopy = [...rooms];\n    const userRoom = roomsCopy.find(\n      (room) => room.id === parseInt(event.target.id)\n    );\n    if (!userRoom) return;\n    userRoom.occupants = form.numberOfOccupants;\n    userRoom.user = form.name;\n    setRooms(roomsCopy);\n  };\n\n  const emptyRoom = (event) => {\n    // console.log({ roomId });\n    const roomId = event.target.id;\n    console.log({ roomId });\n    const roomsCopy = [...rooms];\n    const userRoom = roomsCopy.find(\n      (room) => room.id === parseInt(event.target.id)\n    );\n    delete userRoom.user;\n    userRoom.occupants = 0;\n    setRooms(roomsCopy);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"jumbotron\">\n        <h1 className=\"display-4\">SOMA Booking</h1>\n        <p className=\"lead\">Book with ease.</p>\n      </div>\n      <div className=\"container mb-5\">\n        <BookingForm\n          form={form}\n          setForm={setForm}\n          rooms={rooms}\n          // handleFormSubmit={handleFormSubmit}\n        />\n        <hr></hr>\n        <h2>Rooms</h2>\n        <div className=\"card-deck\">\n          {rooms.map((room, idx) => (\n            <RoomCard\n              key={idx}\n              room={room}\n              bookRoom={bookRoom}\n              emptyRoom={emptyRoom}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}